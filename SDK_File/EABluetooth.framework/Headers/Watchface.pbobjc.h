// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: watchface.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class SFPT_ArcBar;
@class SFPT_Array;
@class SFPT_Background;
@class SFPT_Color;
@class SFPT_Image;
@class SFPT_ImageEx;
@class SFPT_ImageFont;
@class SFPT_ImageFont_Map;
@class SFPT_Label;
@class SFPT_LineBar;
@class SFPT_Pointer;
@class SFPT_Widget;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum SFPT_Pointer_Type

typedef GPB_ENUM(SFPT_Pointer_Type) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SFPT_Pointer_Type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SFPT_Pointer_Type_Hour = 0,
  SFPT_Pointer_Type_Minute = 1,
  SFPT_Pointer_Type_Second = 2,
  SFPT_Pointer_Type_Custom = 3,
};

GPBEnumDescriptor *SFPT_Pointer_Type_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SFPT_Pointer_Type_IsValidValue(int32_t value);

#pragma mark - Enum SFPT_Label_Align

typedef GPB_ENUM(SFPT_Label_Align) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SFPT_Label_Align_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  SFPT_Label_Align_Center = 0,
  SFPT_Label_Align_Left = 1,
  SFPT_Label_Align_Right = 2,
};

GPBEnumDescriptor *SFPT_Label_Align_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SFPT_Label_Align_IsValidValue(int32_t value);

#pragma mark - SFPT_WatchfaceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SFPT_WatchfaceRoot : GPBRootObject
@end

#pragma mark - SFPT_Watchface

typedef GPB_ENUM(SFPT_Watchface_FieldNumber) {
  SFPT_Watchface_FieldNumber_WidgetsArray = 1,
};

GPB_FINAL @interface SFPT_Watchface : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SFPT_Widget*> *widgetsArray;
/** The number of items in @c widgetsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger widgetsArray_Count;

@end

#pragma mark - SFPT_Widget

typedef GPB_ENUM(SFPT_Widget_FieldNumber) {
  SFPT_Widget_FieldNumber_Background = 1,
  SFPT_Widget_FieldNumber_Image = 2,
  SFPT_Widget_FieldNumber_Pointer = 3,
  SFPT_Widget_FieldNumber_ImageEx = 4,
  SFPT_Widget_FieldNumber_ArcBar = 5,
  SFPT_Widget_FieldNumber_LineBar = 6,
  SFPT_Widget_FieldNumber_ImageFont = 7,
  SFPT_Widget_FieldNumber_Label = 8,
  SFPT_Widget_FieldNumber_Array = 9,
};

typedef GPB_ENUM(SFPT_Widget_Opt_OneOfCase) {
  SFPT_Widget_Opt_OneOfCase_GPBUnsetOneOfCase = 0,
  SFPT_Widget_Opt_OneOfCase_Background = 1,
  SFPT_Widget_Opt_OneOfCase_Image = 2,
  SFPT_Widget_Opt_OneOfCase_Pointer = 3,
  SFPT_Widget_Opt_OneOfCase_ImageEx = 4,
  SFPT_Widget_Opt_OneOfCase_ArcBar = 5,
  SFPT_Widget_Opt_OneOfCase_LineBar = 6,
  SFPT_Widget_Opt_OneOfCase_ImageFont = 7,
  SFPT_Widget_Opt_OneOfCase_Label = 8,
  SFPT_Widget_Opt_OneOfCase_Array = 9,
};

GPB_FINAL @interface SFPT_Widget : GPBMessage

@property(nonatomic, readonly) SFPT_Widget_Opt_OneOfCase optOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_Background *background;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_Image *image;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_Pointer *pointer;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_ImageEx *imageEx;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_ArcBar *arcBar;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_LineBar *lineBar;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_ImageFont *imageFont;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_Label *label;

@property(nonatomic, readwrite, strong, null_resettable) SFPT_Array *array;

@end

/**
 * Clears whatever value was set for the oneof 'opt'.
 **/
void SFPT_Widget_ClearOptOneOfCase(SFPT_Widget *message);

#pragma mark - SFPT_Background

typedef GPB_ENUM(SFPT_Background_FieldNumber) {
  SFPT_Background_FieldNumber_Address = 1,
};

GPB_FINAL @interface SFPT_Background : GPBMessage

/** 资源偏移地址 */
@property(nonatomic, readwrite) uint32_t address;

@end

#pragma mark - SFPT_Image

typedef GPB_ENUM(SFPT_Image_FieldNumber) {
  SFPT_Image_FieldNumber_Address = 1,
  SFPT_Image_FieldNumber_X = 2,
  SFPT_Image_FieldNumber_Y = 3,
};

GPB_FINAL @interface SFPT_Image : GPBMessage

@property(nonatomic, readwrite) uint32_t address;

/** 左上角x坐标 */
@property(nonatomic, readwrite) int32_t x;

/** 左上角y坐标 */
@property(nonatomic, readwrite) int32_t y;

@end

#pragma mark - SFPT_ImageEx

typedef GPB_ENUM(SFPT_ImageEx_FieldNumber) {
  SFPT_ImageEx_FieldNumber_Address = 1,
  SFPT_ImageEx_FieldNumber_X = 2,
  SFPT_ImageEx_FieldNumber_Y = 3,
};

GPB_FINAL @interface SFPT_ImageEx : GPBMessage

/** 地址表达式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

/** 左上角x坐标表达式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *x;

/** 左上角y坐标表达式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *y;

@end

#pragma mark - SFPT_Pointer

typedef GPB_ENUM(SFPT_Pointer_FieldNumber) {
  SFPT_Pointer_FieldNumber_Address = 1,
  SFPT_Pointer_FieldNumber_X0 = 2,
  SFPT_Pointer_FieldNumber_Y0 = 3,
  SFPT_Pointer_FieldNumber_X = 4,
  SFPT_Pointer_FieldNumber_Y = 5,
  SFPT_Pointer_FieldNumber_Type = 6,
  SFPT_Pointer_FieldNumber_CustomAngle = 7,
};

/**
 * 指针
 **/
GPB_FINAL @interface SFPT_Pointer : GPBMessage

/** 资源偏移地址 */
@property(nonatomic, readwrite) uint32_t address;

/** 旋转中心x相对坐标 */
@property(nonatomic, readwrite) int32_t x0;

/** 旋转中心y相对坐标 */
@property(nonatomic, readwrite) int32_t y0;

/** 中心点x绝对坐标 */
@property(nonatomic, readwrite) int32_t x;

/** 中心点y绝对坐标 */
@property(nonatomic, readwrite) int32_t y;

@property(nonatomic, readwrite) SFPT_Pointer_Type type;

/** 角度表达式 type为CUSTOM时使用 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *customAngle;

@end

/**
 * Fetches the raw value of a @c SFPT_Pointer's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SFPT_Pointer_Type_RawValue(SFPT_Pointer *message);
/**
 * Sets the raw value of an @c SFPT_Pointer's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSFPT_Pointer_Type_RawValue(SFPT_Pointer *message, int32_t value);

#pragma mark - SFPT_ArcBar

typedef GPB_ENUM(SFPT_ArcBar_FieldNumber) {
  SFPT_ArcBar_FieldNumber_X = 1,
  SFPT_ArcBar_FieldNumber_Y = 2,
  SFPT_ArcBar_FieldNumber_Size = 3,
  SFPT_ArcBar_FieldNumber_PenSize = 4,
  SFPT_ArcBar_FieldNumber_RoundEnd = 5,
  SFPT_ArcBar_FieldNumber_BeginAngle = 6,
  SFPT_ArcBar_FieldNumber_EndAngle = 7,
  SFPT_ArcBar_FieldNumber_Color = 8,
};

/**
 * 弧形进度条
 **/
GPB_FINAL @interface SFPT_ArcBar : GPBMessage

/** 左上角x坐标 */
@property(nonatomic, readwrite) uint32_t x;

/** 左上角y坐标 */
@property(nonatomic, readwrite) uint32_t y;

/** 外直径 */
@property(nonatomic, readwrite) uint32_t size;

/** 圆弧粗细 */
@property(nonatomic, readwrite) uint32_t penSize;

/** false：直角头，true：圆头 */
@property(nonatomic, readwrite) BOOL roundEnd;

/** 起始角度 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *beginAngle;

/** 终止角度 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *endAngle;

/** 圆弧颜色 */
@property(nonatomic, readwrite, strong, null_resettable) SFPT_Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@end

#pragma mark - SFPT_LineBar

typedef GPB_ENUM(SFPT_LineBar_FieldNumber) {
  SFPT_LineBar_FieldNumber_X1 = 1,
  SFPT_LineBar_FieldNumber_Y1 = 2,
  SFPT_LineBar_FieldNumber_X2 = 3,
  SFPT_LineBar_FieldNumber_Y2 = 4,
  SFPT_LineBar_FieldNumber_PenSize = 5,
  SFPT_LineBar_FieldNumber_RoundEnd = 6,
  SFPT_LineBar_FieldNumber_Color = 7,
};

/**
 * 线性进度条
 **/
GPB_FINAL @interface SFPT_LineBar : GPBMessage

/** 起始点x坐标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *x1;

/** 起始点y坐标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *y1;

/** 终止点x坐标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *x2;

/** 终止点y坐标 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *y2;

/** 粗细 */
@property(nonatomic, readwrite) uint32_t penSize;

/** false：直角头，true：圆 */
@property(nonatomic, readwrite) BOOL roundEnd;

/** 进度条颜色 */
@property(nonatomic, readwrite, strong, null_resettable) SFPT_Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

@end

#pragma mark - SFPT_ImageFont

typedef GPB_ENUM(SFPT_ImageFont_FieldNumber) {
  SFPT_ImageFont_FieldNumber_Id_p = 1,
  SFPT_ImageFont_FieldNumber_Height = 2,
  SFPT_ImageFont_FieldNumber_MapsArray = 3,
};

/**
 * 图片字体
 **/
GPB_FINAL @interface SFPT_ImageFont : GPBMessage

/** 同一个表盘不同字体需要不同的id */
@property(nonatomic, readwrite) uint32_t id_p;

/** 字体的高度 */
@property(nonatomic, readwrite) uint32_t height;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SFPT_ImageFont_Map*> *mapsArray;
/** The number of items in @c mapsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger mapsArray_Count;

@end

#pragma mark - SFPT_ImageFont_Map

typedef GPB_ENUM(SFPT_ImageFont_Map_FieldNumber) {
  SFPT_ImageFont_Map_FieldNumber_UnicodeBegin = 1,
  SFPT_ImageFont_Map_FieldNumber_UnicodeEnd = 2,
  SFPT_ImageFont_Map_FieldNumber_Address = 3,
  SFPT_ImageFont_Map_FieldNumber_Width = 4,
};

/**
 * 自定义图片字体映射。图片高度需要一致
 **/
GPB_FINAL @interface SFPT_ImageFont_Map : GPBMessage

/** 字符的unicode码起始 */
@property(nonatomic, readwrite) uint32_t unicodeBegin;

/** 字符的unicode码结束 */
@property(nonatomic, readwrite) uint32_t unicodeEnd;

/** 图片的地址 */
@property(nonatomic, readwrite) uint32_t address;

/** 图片的宽度 */
@property(nonatomic, readwrite) uint32_t width;

@end

#pragma mark - SFPT_Label

typedef GPB_ENUM(SFPT_Label_FieldNumber) {
  SFPT_Label_FieldNumber_X = 1,
  SFPT_Label_FieldNumber_Y = 2,
  SFPT_Label_FieldNumber_Align = 3,
  SFPT_Label_FieldNumber_Size = 4,
  SFPT_Label_FieldNumber_Color = 5,
  SFPT_Label_FieldNumber_FontId = 6,
  SFPT_Label_FieldNumber_Text = 7,
  SFPT_Label_FieldNumber_LetterSpace = 8,
  SFPT_Label_FieldNumber_Recolor = 9,
  SFPT_Label_FieldNumber_X12 = 10,
  SFPT_Label_FieldNumber_Y12 = 11,
  SFPT_Label_FieldNumber_TimeFormat = 12,
};

/**
 * 文本框
 **/
GPB_FINAL @interface SFPT_Label : GPBMessage

/** 对齐点x坐标 */
@property(nonatomic, readwrite) uint32_t x;

/** 对齐点y坐标 */
@property(nonatomic, readwrite) uint32_t y;

@property(nonatomic, readwrite) SFPT_Label_Align align;

/** 字体大小 */
@property(nonatomic, readwrite) uint32_t size;

/** 字体颜色 */
@property(nonatomic, readwrite, strong, null_resettable) SFPT_Color *color;
/** Test to see if @c color has been set. */
@property(nonatomic, readwrite) BOOL hasColor;

/** 自定义字体id。默认0为内置字体 */
@property(nonatomic, readwrite) uint32_t fontId;

/** 用{=...}引用表达式，{...}引用预设文本。预设文本： */
@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** 字体间距 */
@property(nonatomic, readwrite) uint32_t letterSpace;

/** 使用gui的recolor功能 */
@property(nonatomic, readwrite) BOOL recolor;

@property(nonatomic, readwrite) uint32_t x12;

@property(nonatomic, readwrite) uint32_t y12;

@property(nonatomic, readwrite) uint32_t timeFormat;

@end

/**
 * Fetches the raw value of a @c SFPT_Label's @c align property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SFPT_Label_Align_RawValue(SFPT_Label *message);
/**
 * Sets the raw value of an @c SFPT_Label's @c align property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSFPT_Label_Align_RawValue(SFPT_Label *message, int32_t value);

#pragma mark - SFPT_Color

typedef GPB_ENUM(SFPT_Color_FieldNumber) {
  SFPT_Color_FieldNumber_R = 1,
  SFPT_Color_FieldNumber_G = 2,
  SFPT_Color_FieldNumber_B = 3,
};

GPB_FINAL @interface SFPT_Color : GPBMessage

@property(nonatomic, readwrite) uint32_t r;

@property(nonatomic, readwrite) uint32_t g;

@property(nonatomic, readwrite) uint32_t b;

@end

#pragma mark - SFPT_Array

typedef GPB_ENUM(SFPT_Array_FieldNumber) {
  SFPT_Array_FieldNumber_Id_p = 1,
  SFPT_Array_FieldNumber_DataArray = 2,
};

GPB_FINAL @interface SFPT_Array : GPBMessage

@property(nonatomic, readwrite) uint32_t id_p;

@property(nonatomic, readwrite, strong, null_resettable) GPBDoubleArray *dataArray;
/** The number of items in @c dataArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dataArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
